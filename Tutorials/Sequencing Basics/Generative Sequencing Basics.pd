#N canvas 266 36 752 949 12;
#X obj 167 176 random 100;
#X floatatom 167 231 5 0 0 0 - - -;
#X obj 167 204 + 1;
#X obj 167 138 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 167 314 sel 1;
#X floatatom 167 341 5 0 0 0 - - -;
#X obj 167 405 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 228 446 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 291 489 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 167 593 line~;
#X obj 167 537 bng 36 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 291 537 bng 36 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 228 537 bng 36 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 167 574 1 20;
#X obj 149 677 *~;
#X obj 19 589 phasor~;
#X floatatom 19 205 5 0 0 0 - - -;
#X obj 19 658 bob~;
#X floatatom 31 622 5 0 0 0 - - -;
#X obj 149 724 *~ 0.5;
#X obj 149 761 dac~;
#X obj 19 176 + 55;
#X obj 19 153 random 881;
#X msg 293 250 \$1;
#X obj 296 189 hsl 128 15 0 100 0 0 empty empty Play_Probability_Percentage
-2 -8 0 10 -262144 -1 -1 0 1;
#X floatatom 293 229 5 0 0 0 - - -;
#X obj 293 207 int;
#X msg 228 574 0.5 50;
#X obj 228 420 delay 50;
#X obj 291 461 delay 30;
#X msg 291 574 0 30;
#X obj 167 84 metro \$1;
#X obj 223 51 hsl 128 15 85 500 0 0 empty empty Clock_Speed -2 -8 0
10 -262144 -1 -1 0 1;
#X obj 167 33 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X text 368 49 Just a basic on/off clock for the sequencer;
#X obj 167 269 <= \$1;
#X text 374 209 This is the whole basic idea of the generative sequencing.
It uses the [random 100] object (with a [+ 1] so its 1-100 rather then
0-99) to generate a random number and then the [<] object decides whether
it will play or not. This is done using the play probability slider
which goes from 1-100 (the [int] object is just to make it whole numbers
and the [\$1] message box are just there to make the $ variables work
smoother) and sets the ceiling of the [<] object. Any random number
over what you set the play probability to be will send a bang and any
number below or equal will., f 47;
#X text 352 526 This envelope and oscillator is just to show the patch's
proof of concept. Since the random part just sends a bang \, it could
really control anything including plaing samples \, playing envelopes
\, even starting and ending whole other sequencers., f 48;
#X connect 0 0 2 0;
#X connect 1 0 35 0;
#X connect 2 0 1 0;
#X connect 3 0 0 0;
#X connect 3 0 22 0;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X connect 6 0 10 0;
#X connect 6 0 28 0;
#X connect 7 0 12 0;
#X connect 7 0 29 0;
#X connect 8 0 11 0;
#X connect 9 0 14 1;
#X connect 10 0 13 0;
#X connect 11 0 30 0;
#X connect 12 0 27 0;
#X connect 13 0 9 0;
#X connect 14 0 19 0;
#X connect 15 0 17 0;
#X connect 16 0 15 0;
#X connect 17 0 14 0;
#X connect 18 0 17 1;
#X connect 19 0 20 0;
#X connect 19 0 20 1;
#X connect 21 0 16 0;
#X connect 22 0 21 0;
#X connect 23 0 35 1;
#X connect 24 0 26 0;
#X connect 25 0 23 0;
#X connect 26 0 25 0;
#X connect 27 0 9 0;
#X connect 28 0 7 0;
#X connect 29 0 8 0;
#X connect 30 0 9 0;
#X connect 31 0 3 0;
#X connect 32 0 31 1;
#X connect 33 0 31 0;
#X connect 35 0 4 0;
