#N canvas 55 30 1823 945 12;
#X obj 469 1286 dac~, f 9;
#X floatatom 528 180 5 0 0 0 - - -;
#X floatatom 858 239 5 0 0 0 - - -;
#X obj 858 275 osc~;
#X floatatom 904 239 5 0 0 0 - - -;
#X obj 904 275 osc~;
#X floatatom 950 239 5 0 0 0 - - -;
#X obj 950 275 osc~;
#X floatatom 996 239 5 0 0 0 - - -;
#X obj 996 275 osc~;
#X floatatom 1042 239 5 0 0 0 - - -;
#X obj 1042 275 osc~;
#X obj 410 141 loadbang;
#X msg 410 161 0;
#X obj 858 316 *~ 0.5;
#X obj 487 564 bng 15 250 50 0 empty empty empty 17 7 0 10 -261682
-203904 -1;
#X obj 569 605 bng 15 250 50 0 empty empty empty 17 7 0 10 -261682
-203904 -1;
#X obj 652 648 bng 15 250 50 0 empty empty empty 17 7 0 10 -261682
-203904 -1;
#X obj 355 129 bng 15 250 50 0 empty empty empty 17 7 0 10 -261682
-203904 -1;
#X obj 355 549 bng 15 250 50 0 empty empty empty 17 7 0 10 -261682
-203904 -1;
#X text 2239 1669 hey. you're doing a great job. :);
#X obj 858 198 * 2;
#X obj 904 198 * 3;
#X obj 487 752 line~;
#X obj 487 697 bng 36 250 50 0 empty empty empty 17 7 0 10 -262130
-204786 -1;
#X obj 652 697 bng 36 250 50 0 empty empty empty 17 7 0 10 -262130
-203904 -1;
#X obj 569 697 bng 36 250 50 0 empty empty empty 17 7 0 10 -262130
-204800 -1;
#X floatatom 1095 239 5 0 0 0 - - -;
#X obj 1095 275 osc~;
#X floatatom 1155 239 5 0 0 0 - - -;
#X obj 1155 275 osc~;
#X obj 812 239 osc~;
#X obj 469 335 *~;
#X msg 428 239 0;
#X msg 458 239 1;
#X text 463 220 on;
#X text 427 220 off;
#X obj 794 335 *~;
#X msg 753 239 0;
#X msg 783 239 1;
#X floatatom 428 317 5 0 1 0 - - -;
#X floatatom 753 317 5 0 1 0 - - -;
#X text 427 197 Saw Wave;
#X obj 812 198 * 1;
#X text 745 197 Sine Wave;
#X text 753 220 off;
#X text 786 220 on, f 4;
#X obj 904 316 *~ 0.4;
#X obj 950 316 *~ 0.3;
#X obj 996 316 *~ 0.1;
#X obj 1042 316 *~ 0.05;
#X obj 469 498 bob~;
#X obj 497 446 hsl 128 25 0 4 0 0 empty empty Resonance 3 8 0 10 -204786
-1 -1 0 1;
#X obj 484 403 hsl 128 25 0 7500 0 0 empty empty Cutoff 3 8 0 10 -232576
-1 -1 400 1;
#X floatatom 481 428 5 0 10000 0 - - -;
#X floatatom 494 471 5 0 4 0 - - -;
#X obj 402 390 loadbang;
#X obj 579 94 bng 35 250 50 0 empty empty empty 17 7 0 10 -1 -203904
-1;
#X obj 630 94 bng 35 250 50 0 empty empty empty 17 7 0 10 -262144 -203904
-1;
#X obj 681 94 bng 35 250 50 0 empty empty empty 17 7 0 10 -1 -203904
-1;
#X obj 732 94 bng 35 250 50 0 empty empty empty 17 7 0 10 -262144 -203904
-1;
#X obj 783 94 bng 35 250 50 0 empty empty empty 17 7 0 10 -262144 -203904
-1;
#X obj 834 94 bng 35 250 50 0 empty empty empty 17 7 0 10 -1 -203904
-1;
#X obj 885 94 bng 35 250 50 0 empty empty empty 17 7 0 10 -262144 -203904
-1;
#X obj 936 94 bng 35 250 50 0 empty empty empty 17 7 0 10 -1 -203904
-1;
#X obj 987 94 bng 35 250 50 0 empty empty empty 17 7 0 10 -262144 -203904
-1;
#X obj 1038 94 bng 35 250 50 0 empty empty empty 17 7 0 10 -1 -203904
-1;
#X obj 1089 94 bng 35 250 50 0 empty empty empty 17 7 0 10 -262144
-203904 -1;
#X obj 1140 94 bng 35 250 50 0 empty empty C4 12 18 0 10 -261682 -203904
-1;
#X obj 1191 94 bng 35 250 50 0 empty empty empty 17 7 0 10 -1 -203904
-1;
#X obj 1242 94 bng 35 250 50 0 empty empty empty 17 7 0 10 -262144
-203904 -1;
#X obj 1293 94 bng 35 250 50 0 empty empty empty 17 7 0 10 -1 -203904
-1;
#X obj 1344 94 bng 35 250 50 0 empty empty empty 17 7 0 10 -262144
-203904 -1;
#X obj 1395 94 bng 35 250 50 0 empty empty empty 17 7 0 10 -262144
-203904 -1;
#X obj 1446 94 bng 35 250 50 0 empty empty empty 17 7 0 10 -1 -203904
-1;
#X obj 1497 94 bng 35 250 50 0 empty empty empty 17 7 0 10 -262144
-203904 -1;
#X obj 1548 94 bng 35 250 50 0 empty empty empty 17 7 0 10 -1 -203904
-1;
#X obj 1599 94 bng 35 250 50 0 empty empty empty 17 7 0 10 -262144
-203904 -1;
#X obj 1650 94 bng 35 250 50 0 empty empty empty 17 7 0 10 -1 -203904
-1;
#X obj 1701 94 bng 35 250 50 0 empty empty empty 17 7 0 10 -262144
-203904 -1;
#X msg 528 161 130.81;
#X msg 579 161 138.59;
#X msg 630 161 146.83;
#X msg 681 161 155.56;
#X msg 732 161 164.81;
#X msg 783 161 174.61;
#X obj 528 94 bng 35 250 50 0 empty empty C3 12 18 0 10 -261234 -232576
-1;
#X msg 834 161 185;
#X msg 885 161 196;
#X msg 936 161 207.65;
#X msg 987 161 220;
#X msg 1038 161 233.08;
#X msg 1089 161 246.94;
#X msg 1140 161 261.63;
#X msg 1191 161 277.18;
#X msg 1242 161 293.66;
#X msg 1293 161 311.13;
#X msg 1344 161 329.63;
#X msg 1395 161 349.23;
#X msg 1446 161 369.99;
#X msg 1497 161 392;
#X msg 1548 161 415.3;
#X msg 1599 161 440;
#X msg 1650 161 466.16;
#X msg 1701 161 493.88;
#X obj 1752 94 bng 35 250 50 0 empty empty C5 12 18 0 10 -262130 -203904
-1;
#X msg 1752 161 523.25;
#X obj 950 198 * 4;
#X obj 996 198 * 5;
#X obj 1042 198 * 6;
#X obj 1095 198 * 7;
#X obj 1155 198 * 8;
#X msg 652 733 0 100;
#X text 243 28 KEYBOARD - These are the frequencies from C3 to C5.
When the bang is pressed \, it sends the message to the number box
and switches it to that frequency., f 36;
#X text 726 585 ENVELOPE - This here is a basic ADSR style envelope.
1st column is attack \, 2nd is decay \, third is release \, the delay
in the last column acts as the sustain as well. The bangs on the 2nd
and 3rd column are not needed \, but are nice for visual feedback.
To change specific points of the ADSR you would change the amplitude
values and the delay times. How it works is when the first bang is
hit (which is sent from the keyboard bangs via the path on the far
left) \, it sends the number info to line object. The first number
is the target number and the second number is how long it takes to
reach it (in milliseconds). It then moves down the row based on the
delay \, which is moving it to the next part of the envelope. p.s.
For line objects \, always use line~ instead of just line. The line
control is very noisy so line~ works much better for audio., f 72
;
#N canvas 0 22 450 278 (subpatch) 0;
#X array Output 1000 float 1;
#A 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;
#X coords 0 1 999 -1 200 140 1;
#X restore 217 583 graph;
#X obj 316 1146 loadbang;
#X obj 316 1192 tabwrite~ Output;
#X obj 359 220 loadbang;
#X obj 316 1165 metro 100;
#X text 190 728 OSCILLOSCOPE - The oscilloscope is an array that is
hooked up to the end of the signal chain and writes to the table using
[tabwrite~]. It needs to be updates with bangs every time we want a
new sample so there is a metronome setup (in milliseconds) to bang
it for every sample. It does need to be activated at setup so the [loadbang]
primes it., f 35;
#X msg 402 452 1;
#X obj 402 433 loadbang;
#N canvas 0 22 450 278 (subpatch) 0;
#X array Saw 500 float 1;
#A 0 -0.106507 -0.102947 -0.0993878 -0.0958284 -0.0922689 -0.0887095
-0.08515 -0.0815905 -0.0780311 -0.0744716 -0.0709122 -0.0673527 -0.0637933
-0.0602338 -0.0566744 -0.0531149 -0.0495555 -0.045996 -0.0424366 -0.0388771
-0.0353176 -0.0317582 -0.0281987 -0.0246393 -0.0210798 -0.0175204 -0.0139609
-0.0104014 -0.00684199 -0.00328252 0.000276947 0.00383635 0.00739582
0.0109553 0.0145148 0.0180742 0.0216336 0.0251931 0.0287526 0.032312
0.0358715 0.0394309 0.0429904 0.0465498 0.0501093 0.0536688 0.0572282
0.0607877 0.0643471 0.0679066 0.0714661 0.0750255 0.0785849 0.0821444
0.0857039 0.0892633 0.0928227 0.0963822 0.0999417 0.103501 0.107061
0.11062 0.114179 0.117739 0.121298 0.124858 0.128417 0.131977 0.135536
0.139096 0.142655 0.146215 0.149774 0.153334 0.156893 0.160452 0.164012
0.167571 0.171131 0.17469 0.17825 0.181809 0.185369 0.188928 0.192488
0.196047 0.199606 0.203166 0.206725 0.210285 0.213844 0.217404 0.220963
0.224523 0.228082 0.231642 0.235201 0.23876 0.24232 0.245879 0.249439
0.252998 0.256558 0.260117 0.263677 0.267236 0.270796 0.274355 0.277914
0.281474 0.285033 0.288593 0.292152 0.295712 0.299271 0.302831 0.30639
0.30995 0.313509 0.317069 0.320628 0.324187 0.327747 0.331306 0.334866
0.338425 0.341985 0.345544 0.349104 0.352663 0.356222 0.359782 0.363341
0.366901 0.37046 0.37402 0.377579 0.381139 0.384698 0.388258 0.391817
0.395377 0.398936 0.402495 0.406055 0.409614 0.413174 0.416733 0.420293
0.423852 0.427412 0.430971 0.434531 0.43809 0.441649 0.445209 0.448768
0.452328 0.455887 0.459447 0.463006 0.466566 0.470125 0.473685 0.477244
0.480803 0.484363 0.487922 0.491482 0.495041 0.498601 0.50216 0.50572
0.509279 0.512839 0.516398 0.519957 0.523517 0.527076 0.530636 0.534195
0.537755 0.541314 0.544874 0.548433 0.551993 0.555552 0.559111 0.562671
0.56623 0.56979 0.573349 0.576909 0.580468 0.584028 0.587587 0.591147
0.594706 0.598266 -0.598175 -0.594616 -0.591056 -0.587497 -0.583937
-0.580378 -0.576818 -0.573259 -0.569699 -0.56614 -0.562581 -0.559021
-0.555462 -0.551902 -0.548343 -0.544783 -0.541224 -0.537664 -0.534105
-0.530545 -0.526986 -0.523427 -0.519867 -0.516308 -0.512748 -0.509189
-0.505629 -0.50207 -0.49851 -0.494951 -0.491391 -0.487832 -0.484273
-0.480713 -0.477154 -0.473594 -0.470035 -0.466475 -0.462916 -0.459356
-0.455797 -0.452237 -0.448678 -0.445119 -0.441559 -0.438 -0.43444 -0.430881
-0.427321 -0.423762 -0.420202 -0.416643 -0.413083 -0.409524 -0.405965
-0.402405 -0.398846 -0.395286 -0.391727 -0.388167 -0.384608 -0.381048
-0.377489 -0.373929 -0.37037 -0.36681 -0.363251 -0.359692 -0.356132
-0.352573 -0.349013 -0.345454 -0.341894 -0.338335 -0.334775 -0.331216
-0.327656 -0.324097 -0.320538 -0.316978 -0.313419 -0.309859 -0.3063
-0.30274 -0.299181 -0.295621 -0.292062 -0.288502 -0.284943 -0.281384
-0.277824 -0.274265 -0.270705 -0.267146 -0.263586 -0.260027 -0.256467
-0.252908 -0.249348 -0.245789 -0.24223 -0.23867 -0.235111 -0.231551
-0.227992 -0.224432 -0.220873 -0.217313 -0.213754 -0.210194 -0.206635
-0.203075 -0.199516 -0.195957 -0.192397 -0.188838 -0.185278 -0.181719
-0.178159 -0.1746 -0.17104 -0.167481 -0.163921 -0.160362 -0.156803
-0.153243 -0.149684 -0.146124 -0.142565 -0.139005 -0.135446 -0.131886
-0.128327 -0.124767 -0.121208 -0.117649 -0.114089 -0.11053 -0.10697
-0.103411 -0.0998513 -0.0962918 -0.0927324 -0.0891729 -0.0856135 -0.082054
-0.0784946 -0.0749351 -0.0713756 -0.0678162 -0.0642567 -0.0606973 -0.0571378
-0.0535784 -0.0500189 -0.0464594 -0.0429 -0.0393405 -0.0357811 -0.0322216
-0.0286622 -0.0251027 -0.0215433 -0.0179838 -0.0144243 -0.0108649 -0.00730544
-0.00374597 -0.000186539 0.00337293 0.0069324 0.0104919 0.0140513 0.0176107
0.0211702 0.0247297 0.0282892 0.0318485 0.035408 0.0389675 0.042527
0.0460864 0.0496458 0.0532053 0.0567648 0.0603242 0.0638837 0.0674431
0.0710026 0.0745621 0.0781215 0.081681 0.0852404 0.0887999 0.0923593
0.0959188 0.0994783 0.103038 0.106597 0.110157 0.113716 0.117275 0.120835
0.124394 0.127954 0.131513 0.135073 0.138632 0.142192 0.145751 0.149311
0.15287 0.15643 0.159989 0.163548 0.167108 0.170667 0.174227 0.177786
0.181346 0.184905 0.188465 0.192024 0.195584 0.199143 0.202702 0.206262
0.209821 0.213381 0.21694 0.2205 0.224059 0.227619 0.231178 0.234738
0.238297 0.241856 0.245416 0.248975 0.252535 0.256094 0.259654 0.263213
0.266773 0.270332 0.273892 0.277451 0.28101 0.28457 0.288129 0.291689
0.295248 0.298808 0.302367 0.305927 0.309486 0.313046 0.316605 0.320165
0.323724 0.327283 0.330843 0.334402 0.337962 0.341521 0.345081 0.34864
0.3522 0.355759 0.359319 0.362878 0.366437 0.369997 0.373556 0.377116
0.380675 0.384235 0.387794 0.391354 0.394913 0.398472 0.402032 0.405591
0.409151 0.41271 0.41627 0.419829 0.423389 0.426948 0.430508 0.434067
0.437627 0.441186 0.444745 0.448305 0.451864 0.455424 0.458983 0.462543
0.466102 0.469662;
#X coords 0 1 499 -1 200 140 1;
#X restore 1230 200 graph;
#N canvas 0 22 450 278 (subpatch) 0;
#X array Sine 500 float 1;
#A 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;
#X coords 0 1 499 -1 200 140 1;
#X restore 1636 200 graph;
#X obj 83 373 tabwrite~ Saw;
#X obj 294 373 tabwrite~ Sine;
#X obj 83 335 loadbang;
#X obj 196 354 *~ 0.3;
#X obj 242 354 *~ 0.3;
#X obj 1155 316 *~ 0.0078;
#X obj 1095 316 *~ 0.016;
#X obj 469 354 *~ 1;
#X obj 487 198 * 1;
#X obj 458 298 * 1;
#X obj 783 298 * 1;
#X obj 638 198 * 1;
#X obj 638 239 phasor~;
#X obj 638 258 expr~ $v1 > 0.5;
#X msg 579 239 0;
#X msg 609 239 1;
#X floatatom 579 317 5 0 1 0 - - -;
#X obj 609 298 * 1;
#X obj 620 335 *~;
#X text 557 197 Square Wave;
#X text 577 220 off;
#X text 616 220 on;
#X obj 487 317 *~ 2;
#N canvas 0 22 450 278 (subpatch) 0;
#X array Square 500 float 1;
#A 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;
#X coords 0 1 499 -1 200 140 1;
#X restore 1433 200 graph;
#X obj 178 373 tabwrite~ Square;
#X obj 150 354 *~ 0.3;
#X obj 638 316 *~ 1.5;
#X msg 402 409 5000;
#X obj 83 354 metro 100;
#X msg 487 733 1 50;
#X obj 207 110 notein;
#X obj 197 161 * 1;
#X obj 197 129 mtof;
#X text 1236 352 OSCILLATORS - Here we have 2 oscillators \; A saw
wave ([phasor~]) and a sine wave ([osc~]) with a bunch of harmonics
thrown in. There is an on-off switch for each oscillator (directly
to the left of them) that basically works by either multiplying the
signal by 0 or 1 depending on which message box you press. The sine
harmonics can be changed to make different waves. Odds only is triangle
\, and not whole numbers makes bells. They are made through multiplying
the fundamental and changing the volume at the end. The square has
some [expr~] shit that I don't know yet \, but I saw it online and
wanted it. So there's that. They are then combined at the end with
the [*~ 1].;
#X obj 569 579 delay 50;
#X obj 614 372 ctlin 2 1;
#X floatatom 614 410 5 0 0 0 - - -;
#X obj 655 415 ctlin 3 1;
#X floatatom 655 453 5 0 0 0 - - -;
#X obj 614 391 * 60;
#X obj 655 434 / 32;
#X text 780 421 FILTER - Easy peasy built-in Moog Lo-Pass Filter with
slider for filter cutoff (left) and resonance (right). It has midi
control inputs for cutoff (control change 2) and resonance (control
change 3)., f 37;
#X msg 569 733 0.5 200;
#X obj 652 620 delay 200;
#X msg 36 2611 \; pd dsp 1;
#X obj 36 2583 loadbang;
#X text 7 2550 Sets DSP on when patch is loaded.;
#X floatatom 226 185 5 0 0 0 - - -;
#X floatatom 226 228 5 0 0 0 - - -;
#X obj 226 206 % 2;
#X obj 226 249 sel 1;
#X obj 226 271 bng 15 250 50 0 empty empty empty 17 7 0 10 -261682
-1 -1;
#X text 11 15 MIDI - This just allows MIDI to come in using super basics
methods. It takes the note in from the left inlet of the [notein] object
and then uses the [mtof] (MIDI to frequency) object to send it to the
oscillator bank. It also sends a bang to the envelope everytime a note
is played. The bunch of hoopla with the [int 1] and [% 2] are so only
"note on" messages are sent to the enelope generator. The only problem
with it is that note priority can be a bit finicky., f 25;
#X obj 226 534 bng 15 250 50 0 empty empty empty 17 7 0 10 -261682
-203904 -1;
#X obj 469 931 freeverb~;
#X msg 624 912 roomsize \$1;
#X msg 746 912 damping \$1;
#X msg 870 912 width \$1;
#X msg 993 912 wet \$1;
#X msg 1113 912 dry \$1;
#X msg 542 912 bypass \$1;
#X floatatom 624 894 5 0 0 0 - - -;
#X obj 627 872 hsl 100 22 0 1 0 0 empty empty room 30 -7 0 15 -232576
-1 -1 7425 1;
#X floatatom 746 894 5 0 0 0 - - -;
#X obj 749 872 hsl 100 22 0 1 0 0 empty empty dampen 21 -7 0 15 -204800
-1 -1 7425 1;
#X obj 873 872 hsl 100 22 0 1 0 0 empty empty width 26 -7 0 15 -262130
-1 -1 9900 1;
#X floatatom 870 894 5 0 0 0 - - -;
#X obj 996 872 hsl 100 22 0 1 0 0 empty empty wet 36 -7 0 15 -203904
-1 -1 4950 1;
#X floatatom 993 894 5 0 0 0 - - -;
#X obj 1116 872 hsl 100 22 0 1 0 0 empty empty dry 36 -7 0 15 -261682
-1 -1 6930 1;
#X floatatom 1113 894 5 0 0 0 - - -;
#X obj 1411 834 loadbang;
#X obj 1471 834 loadbang;
#X text 1078 956 REVERB - This is using the [freeverb~] external for
the reverb. It is kinda shitty like the rest of the prebaked reverbs
on Pd \, but it has a bit more flexibility. This flexibility does come
with the downside of it flipping the fuck out at seemingly nothing.
It's very important to keep all of its control values between 0 and
1 or else it will cause a feedback loop and destroy ears and speakers
alike. Overall though \, it's preety shite. Hopefully I can try to
fix [vstplugin~] soon and use that., f 69;
#X obj 604 996 vsl 25 100 0 1 0 0 empty empty Master_Out -17 -9 0 12
-261234 -1 -1 9900 1;
#X obj 469 1173 clip~ -0.8 0.8;
#X obj 529 1192 clip~ -0.8 0.8;
#X obj 469 1099 *~;
#X obj 529 1099 *~;
#X obj 708 956 loadbang;
#X msg 708 975 0.5;
#X floatatom 604 1099 5 0 0 0 - - -;
#X obj 842 816 bng 40 250 50 0 empty empty On/Off 6 21 0 9 -204786
-261234 -1;
#X obj 1231 834 loadbang;
#X obj 1291 834 loadbang;
#X obj 1351 834 loadbang;
#X msg 1231 853 0.75;
#X msg 1291 853 0.75;
#X msg 1351 853 1;
#X obj 581 856 + 1;
#X obj 542 856 int 1;
#X obj 542 837 loadbang;
#X obj 542 875 % 2;
#X floatatom 542 894 5 0 0 0 - - -;
#X obj 842 781 tgl 35 0 empty empty empty 17 7 0 10 -204786 -261234
-1 0 1;
#X obj 711 1107 hsl 128 25 0 1 0 0 empty empty Clip_Level 29 -9 0 13
-261234 -204800 -1 12700 1;
#X floatatom 708 1155 5 0 0 0 - - -;
#X obj 669 1132 * -1;
#X floatatom 669 1155 5 0 0 0 - - -;
#X obj 708 1001 loadbang;
#X msg 708 1020 0.8;
#X obj 669 1173 * 1;
#X obj 708 1173 * 1;
#X obj 529 790 *~;
#X obj 469 771 *~;
#X obj 469 532 *~ 0.5;
#X text 368 1315 OUTPUT - This dac~ needs to be at the end of any signal
chain to send the sound to the sound card. All the extra hoo-ha is
just for safety measures since [freeverb~] can be a fucking bitch.
The [clip~] object makes sure the waveform doesn't go over 0.8 and
the master volume is just for quick volume adjustment in Pd. You can
cause some drive using the adjustable clip and gain levels. If you
raise the master and drop the clip level \, you'll get a little gain
with the dry signal and a ton with the reverb.;
#X msg 1471 853 0.7;
#X msg 1411 853 0.5;
#X obj 487 239 saw~;
#X connect 1 0 21 0;
#X connect 1 0 22 0;
#X connect 1 0 43 0;
#X connect 1 0 107 0;
#X connect 1 0 108 0;
#X connect 1 0 109 0;
#X connect 1 0 110 0;
#X connect 1 0 111 0;
#X connect 1 0 133 0;
#X connect 1 0 136 0;
#X connect 2 0 3 0;
#X connect 3 0 14 0;
#X connect 4 0 5 0;
#X connect 5 0 47 0;
#X connect 6 0 7 0;
#X connect 7 0 48 0;
#X connect 8 0 9 0;
#X connect 9 0 49 0;
#X connect 10 0 11 0;
#X connect 11 0 50 0;
#X connect 12 0 13 0;
#X connect 13 0 1 0;
#X connect 14 0 37 1;
#X connect 15 0 24 0;
#X connect 15 0 159 0;
#X connect 16 0 26 0;
#X connect 16 0 168 0;
#X connect 17 0 25 0;
#X connect 18 0 19 0;
#X connect 19 0 15 0;
#X connect 21 0 2 0;
#X connect 22 0 4 0;
#X connect 23 0 229 1;
#X connect 24 0 154 0;
#X connect 25 0 112 0;
#X connect 26 0 167 0;
#X connect 27 0 28 0;
#X connect 28 0 131 0;
#X connect 29 0 30 0;
#X connect 30 0 130 0;
#X connect 31 0 37 1;
#X connect 32 0 128 0;
#X connect 32 0 132 0;
#X connect 33 0 40 0;
#X connect 34 0 134 0;
#X connect 37 0 132 0;
#X connect 37 0 129 0;
#X connect 38 0 41 0;
#X connect 39 0 135 0;
#X connect 40 0 32 0;
#X connect 41 0 37 0;
#X connect 43 0 31 0;
#X connect 47 0 37 1;
#X connect 48 0 37 1;
#X connect 49 0 37 1;
#X connect 50 0 37 1;
#X connect 51 0 230 0;
#X connect 52 0 55 0;
#X connect 53 0 54 0;
#X connect 54 0 51 1;
#X connect 55 0 51 2;
#X connect 56 0 152 0;
#X connect 57 0 81 0;
#X connect 57 0 18 0;
#X connect 58 0 82 0;
#X connect 58 0 18 0;
#X connect 59 0 83 0;
#X connect 59 0 18 0;
#X connect 60 0 84 0;
#X connect 60 0 18 0;
#X connect 61 0 85 0;
#X connect 61 0 18 0;
#X connect 62 0 87 0;
#X connect 62 0 18 0;
#X connect 63 0 88 0;
#X connect 63 0 18 0;
#X connect 64 0 89 0;
#X connect 64 0 18 0;
#X connect 65 0 90 0;
#X connect 65 0 18 0;
#X connect 66 0 91 0;
#X connect 66 0 18 0;
#X connect 67 0 92 0;
#X connect 67 0 18 0;
#X connect 68 0 93 0;
#X connect 68 0 18 0;
#X connect 69 0 94 0;
#X connect 69 0 18 0;
#X connect 70 0 95 0;
#X connect 70 0 18 0;
#X connect 71 0 96 0;
#X connect 71 0 18 0;
#X connect 72 0 97 0;
#X connect 72 0 18 0;
#X connect 73 0 98 0;
#X connect 73 0 18 0;
#X connect 74 0 99 0;
#X connect 74 0 18 0;
#X connect 75 0 100 0;
#X connect 75 0 18 0;
#X connect 76 0 101 0;
#X connect 76 0 18 0;
#X connect 77 0 102 0;
#X connect 77 0 18 0;
#X connect 78 0 103 0;
#X connect 78 0 18 0;
#X connect 79 0 104 0;
#X connect 79 0 18 0;
#X connect 80 0 1 0;
#X connect 81 0 1 0;
#X connect 82 0 1 0;
#X connect 83 0 1 0;
#X connect 84 0 1 0;
#X connect 85 0 1 0;
#X connect 86 0 18 0;
#X connect 86 0 80 0;
#X connect 87 0 1 0;
#X connect 88 0 1 0;
#X connect 89 0 1 0;
#X connect 90 0 1 0;
#X connect 91 0 1 0;
#X connect 92 0 1 0;
#X connect 93 0 1 0;
#X connect 94 0 1 0;
#X connect 95 0 1 0;
#X connect 96 0 1 0;
#X connect 97 0 1 0;
#X connect 98 0 1 0;
#X connect 99 0 1 0;
#X connect 100 0 1 0;
#X connect 101 0 1 0;
#X connect 102 0 1 0;
#X connect 103 0 1 0;
#X connect 104 0 1 0;
#X connect 105 0 106 0;
#X connect 105 0 18 0;
#X connect 106 0 1 0;
#X connect 107 0 6 0;
#X connect 108 0 8 0;
#X connect 109 0 10 0;
#X connect 110 0 27 0;
#X connect 111 0 29 0;
#X connect 112 0 23 0;
#X connect 116 0 119 0;
#X connect 118 0 34 0;
#X connect 118 0 39 0;
#X connect 118 0 140 0;
#X connect 119 0 117 0;
#X connect 121 0 55 0;
#X connect 122 0 121 0;
#X connect 127 0 153 0;
#X connect 128 0 125 0;
#X connect 129 0 126 0;
#X connect 130 0 37 1;
#X connect 131 0 37 1;
#X connect 132 0 51 0;
#X connect 133 0 234 0;
#X connect 134 0 40 0;
#X connect 135 0 41 0;
#X connect 136 0 137 0;
#X connect 137 0 138 0;
#X connect 138 0 151 0;
#X connect 139 0 141 0;
#X connect 140 0 142 0;
#X connect 141 0 143 0;
#X connect 142 0 141 0;
#X connect 143 0 132 0;
#X connect 143 0 150 0;
#X connect 147 0 32 1;
#X connect 150 0 149 0;
#X connect 151 0 143 1;
#X connect 152 0 54 0;
#X connect 153 0 125 0;
#X connect 153 0 126 0;
#X connect 153 0 149 0;
#X connect 154 0 23 0;
#X connect 155 0 157 0;
#X connect 155 1 172 0;
#X connect 156 0 1 0;
#X connect 157 0 156 0;
#X connect 159 0 16 0;
#X connect 160 0 164 0;
#X connect 161 0 54 0;
#X connect 162 0 165 0;
#X connect 163 0 55 0;
#X connect 164 0 161 0;
#X connect 165 0 163 0;
#X connect 167 0 23 0;
#X connect 168 0 17 0;
#X connect 170 0 169 0;
#X connect 172 0 174 0;
#X connect 173 0 175 0;
#X connect 174 0 173 0;
#X connect 175 0 176 0;
#X connect 176 0 178 0;
#X connect 178 0 19 0;
#X connect 179 0 202 0;
#X connect 179 1 203 0;
#X connect 180 0 179 0;
#X connect 181 0 179 0;
#X connect 182 0 179 0;
#X connect 183 0 179 0;
#X connect 184 0 179 0;
#X connect 185 0 179 0;
#X connect 186 0 180 0;
#X connect 187 0 186 0;
#X connect 188 0 181 0;
#X connect 189 0 188 0;
#X connect 190 0 191 0;
#X connect 191 0 182 0;
#X connect 192 0 193 0;
#X connect 193 0 183 0;
#X connect 194 0 195 0;
#X connect 195 0 184 0;
#X connect 196 0 233 0;
#X connect 197 0 232 0;
#X connect 199 0 203 1;
#X connect 199 0 206 0;
#X connect 199 0 202 1;
#X connect 200 0 0 0;
#X connect 200 0 0 1;
#X connect 200 0 117 0;
#X connect 201 0 0 1;
#X connect 202 0 200 0;
#X connect 203 0 201 0;
#X connect 204 0 205 0;
#X connect 205 0 199 0;
#X connect 207 0 215 0;
#X connect 207 0 219 0;
#X connect 208 0 211 0;
#X connect 209 0 212 0;
#X connect 210 0 213 0;
#X connect 211 0 187 0;
#X connect 212 0 189 0;
#X connect 213 0 190 0;
#X connect 214 0 215 1;
#X connect 215 0 214 0;
#X connect 215 0 217 0;
#X connect 216 0 215 0;
#X connect 217 0 218 0;
#X connect 218 0 185 0;
#X connect 220 0 221 0;
#X connect 220 0 222 0;
#X connect 221 0 200 2;
#X connect 221 0 227 0;
#X connect 222 0 223 0;
#X connect 223 0 200 1;
#X connect 223 0 226 0;
#X connect 224 0 225 0;
#X connect 225 0 220 0;
#X connect 226 0 201 1;
#X connect 227 0 201 2;
#X connect 228 0 179 1;
#X connect 229 0 179 0;
#X connect 229 0 228 0;
#X connect 230 0 229 0;
#X connect 232 0 194 0;
#X connect 233 0 192 0;
#X connect 234 0 147 0;
